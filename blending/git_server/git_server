#!/usr/bin/env python3
import argparse
import requests
from os import system, getlogin
from time import sleep
import subprocess

server_root='/var/www/html'
git_repos_path='/home/git/Repos'
hosts_file='/etc/hosts'
virtual_hosts_path='/etc/apache2/sites-available'
def list_sites():
    print(system('a2query -s'))

def enable_site(site):
    print(system('sudo a2ensite %s' % site))
    system('sudo systemctl reload apache2')

def disable_site(site):
    print(system('sudo a2dissite %s' % site))
    system('sudo systemctl reload apache2')

def create_dir(site_name, parent_folder = server_root):
    print('%s/%s' % (parent_folder,site_name))
    error = system('mkdir %s/%s' % (parent_folder, site_name))
    if error != 0:
        print ('Houve um erro ao criar seu site no diretório %s/%s' % (parent_folder, site_name))
    else:
        print ('O site for criado com exito')

def clone_bare(site_name,parent_folder = server_root,First_commit=False):
    if First_commit == False:
        #common site
        system('git init %s/%s --bare' % (git_repos_path, site_name))
        system('git clone %s/%s %s/%s' % (git_repos_path,site_name,parent_folder,site_name))
        post_receive(site_name)
    else:
        #laravel site
        print("parent folder %s" % parent_folder)
        system('git init %s/Laravel/%s --bare' % (git_repos_path, site_name))
        laravel_git_path='%s/%s' % (parent_folder, site_name)
        system('git init %s/%s' % (parent_folder, site_name))
        system('git -C %s remote add origin %s/Laravel/%s' % (laravel_git_path,git_repos_path, site_name))
        system('git -C %s add .' % laravel_git_path)
        system('git -C %s commit -m "First Commit"' % laravel_git_path)
        system('git -C %s push --set-upstream origin master' % laravel_git_path)
        post_receive(site_name,'laravel')


def show_config():
    print('default site: %s' % server_root)
    print('default site repository: %s/sitename' % git_repos_path)
    print('default laravel folder: %s/Laravel/sitename' % server_root)
    print('default laravel repository folder: %s/Laravel/sitename' % git_repos_path)
    print('virtual hosts path: %s' % virtual_hosts_path)
    print('\nSome Explanation: \n')
    print('default site: Here the script will create a directory in yourDefaultSite/sitename, where site name is gotten from --common-site option.')
    print('default laravel folder: is location where the script save your laravel site following the above example yourLaravelFolder/Laravel/sitename where sitename is gotten from your input on -laravel option.')
    print('default laravel repository folder: Here is the location where you store git repository, like the laravel folder example yourLaravelRepository/sitename, the sitename option is gotten from -laravel option.')


def virtual_host_config(sitename,site_type,server_root=server_root):
    directory='%s/%s' % (server_root, sitename) if site_type == 'common' else '%s/Laravel/%s/public' % (server_root, sitename)
    server_root = server_root if site_type == 'common' else '%s/Laravel' % server_root
    #faltando habilitar o site no apache ensite também e dar reload no apache após a configuração ser concluida
    #check sudo
    virtual_host_config='\
    <VirtualHost *:80>\n\
        ServerAdmin webmaster@localhost\n\
        ServerName  %s.xyz\n\
        DocumentRoot %s\n\
        ErrorLog /error.log\n\
        CustomLog /access.log combined\n\
        <Directory %s> \n\
          Options Includes FollowSymLinks \n\
          AllowOverride All \n\
          Order allow,deny \n\
          Allow from all \n\
       </Directory> \n\
      </VirtualHost>\n\
\
      <VirtualHost *:80>\n\
        ServerAdmin webmaster@localhost\n\
        ServerName  %s.serveo.net\n\
        DocumentRoot %s\n\
        ErrorLog /error.log\n\
        CustomLog /access.log combined\n\
        <Directory %s>\n\
          Options Includes FollowSymLinks\n\
          AllowOverride All\n\
          Order allow,deny\n\
          Allow from all\n\
       </Directory>\n\
      </VirtualHost>' %(sitename, directory, directory, sitename, directory, directory)
    current_user = getlogin()

    #write virtual hosts o tmp dir
    system('echo "%s" > /tmp/vhost.conf' % virtual_host_config)
    system('sudo cp /tmp/vhost.conf %s/%s.conf' % (virtual_hosts_path,sitename))

    print('arquivos afetado /etc/hosts')
    consentment=input('você irá fazer algumas mudanças profundas no sistema tem certeza que deseja prosseguir? [Y/n]')
    hosts_text='\n159.89.214.31\t %s.serveo.net\n' % sitename
    hosts_text+='127.0.0.1\t %s.xyz' % sitename
    if current_user != 'root' and consentment == 'y' or consentment == 'Y':

	#virtual hosts
        system('echo "%s" > /tmp/vhost.conf' % virtual_host_config)
        system('sudo cp /tmp/vhost.conf %s/%s.conf' % (virtual_hosts_path,sitename))

	#add entry on hosts file
        system("sudo sh -c 'echo \" " + hosts_text + " \" >> /etc/hosts'")
        print("as seguintes configurações foram inseridas em /etc/hosts")
        print("%s" % hosts_text)

        #enable site for apache2
        system('sudo a2ensite %s' % sitename)
        reload_status=system("sudo systemctl reload apache2")
        if reload_status == 0:
            print("Apache recarregado com sucesso")
    elif current_user == 'root' and consentment == 'y' or consentment == 'Y':
        system('echo "%s" > /tmp/vhost.conf' % virtual_host_config)
        system('sudo cp /tmp/vhost.conf %s/%s.conf' % (virtual_hosts_path,sitename))
        system('echo %s >> /etc/hosts' % hosts_text)
        system('sudo a2ensite %s' % sitename)
        reload_status=system("sudo systemctl reload apache2")
        if reload_status == 0:
            print("Apache recarregado com sucesso")
    else:
        print('você escholheu não fazer nenhuma mudança no sistema, nada será mudado em seu sistema')
        print('saindo do script')
        exit()

def host_site(site_name):
    #system('/bin/sh -c "ssh -R %s:80:localhost:80 -R %s:8000:localhost:22 serveo.net & while true; do wget https://%s.serveo.net -O /dev/null" done' % (sitename,sitename,sitename))
    system('ssh -R %s:80:localhost:80 serveo.net -R 20155:localhost:22 serveo.net' % site_name)

def post_receive(sitename,type='common'):
    site_repo = "%s/Laravel/%s" % (git_repos_path,sitename) if type == "laravel" else '%s/%s' % (git_repos_path, sitename)
    site_path = "%s/Laravel/%s" % (server_root,sitename) if type == "laravel" else "%s/%s" % (server_root, sitename)
    post_receive_content='#!/bin/sh\n\
cd %s \n\
env -i git reset --hard\n\
env -i git pull origin master\n\
exit' % (site_path)
    repo_location=('%s/%s' % (git_repos_path,sitename))
    file=open('%s/hooks/post-receive' % site_repo,'w')
    file.write('%s\n' % post_receive_content)
    file.close()
    system('chmod +x %s/hooks/post-receive' % site_repo)

def remove_site(site_name):
    site=system('rm -r %s/%s' % (server_root, site_name))
    if site != 0:
        system('rm -r %s/Laravel/%s' % (server_root, site_name))

    repo=system('rm -rf %s/%s' %(git_repos_path, site_name))
    if repo != 0:
        system('rm -rf %s/Laravel/%s' % (git_repos_path, site_name))
    vhost=system('sudo rm %s/%s.conf' % (virtual_hosts_path, site_name))
    reload=system('sudo systemctl reload apache2')
    if reload == 0:
        print('Apache recarregado com sucesso')
    system("sudo a2dissite %s" % site_name)
    system("sudo sed -i '/%s.*/d' /etc/hosts" % site_name)

parser = argparse.ArgumentParser()
parser.add_argument('-ls','--list-site',help='lista os sites habilitados no servidor',action='store_true')
parser.add_argument('-ds','--disable-site',help='desabilita o site informado')
parser.add_argument('-es','--enable-site',help='habilita o site informado')

parser.add_argument('-laravel', help='Cria um projeto laravel local com controle de versões git e um virtual host no formato nomesite.xyz (disponível apenas em modo local)')
parser.add_argument('--show-config',help='Exibe as configurações do laravel dentro do script',action='store_true')
parser.add_argument('--common-site',help='Cria um site comum com repositório git e um virtual host no formato nomesite.xyz')
parser.add_argument('--host-site',help='Cria um site que fica disponível na web em qualquer lugar do mundo')

#TODO:implementar no próximo update
#colocar o post-receive para atualizar todos os projetos
parser.add_argument('--delete-site',help='remove o site informado bem como suas configurações')
args = parser.parse_args()

if args.laravel:
    system('composer create-project --prefer-dist laravel/laravel %s/Laravel/%s' %(server_root,args.laravel))
    clone_bare(args.laravel,'%s/Laravel' % server_root,True)
    virtual_host_config(args.laravel,'laravel')

if args.common_site:
    create_dir(args.common_site)
    clone_bare(args.common_site)
    virtual_host_config(args.common_site,'common')

if args.list_site == True:
    list_sites()

if args.enable_site:
    enable_site(args.enable_site)

if args.disable_site:
    disable_site(args.disable_site)

if args.show_config == True:
    show_config()

if args.host_site:
    host_site(args.host_site)

if args.delete_site:
    remove_site(args.delete_site)
#print (args)

